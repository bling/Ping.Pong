//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Expression.Blend.SampleData.TweetSampleDataSource
{
	using System; 

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
	internal class TweetSampleDataSource { }
#else

	public class TweetSampleDataSource : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		public TweetSampleDataSource()
		{
			try
			{
				System.Uri resourceUri = new System.Uri("/PingPong;component/SampleData/TweetSampleDataSource/TweetSampleDataSource.xaml", System.UriKind.Relative);
				if (System.Windows.Application.GetResourceStream(resourceUri) != null)
				{
					System.Windows.Application.LoadComponent(this, resourceUri);
				}
			}
			catch (System.Exception)
			{
			}
		}

		private string _Text = string.Empty;

		public string Text
		{
			get
			{
				return this._Text;
			}

			set
			{
				if (this._Text != value)
				{
					this._Text = value;
					this.OnPropertyChanged("Text");
				}
			}
		}

		private string _CreatedAt = string.Empty;

		public string CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}

			set
			{
				if (this._CreatedAt != value)
				{
					this._CreatedAt = value;
					this.OnPropertyChanged("CreatedAt");
				}
			}
		}

		private User _User = new User();

		public User User
		{
			get
			{
				return this._User;
			}

			set
			{
				if (this._User != value)
				{
					this._User = value;
					this.OnPropertyChanged("User");
				}
			}
		}
	}

	public class User : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private string _ScreenName = string.Empty;

		public string ScreenName
		{
			get
			{
				return this._ScreenName;
			}

			set
			{
				if (this._ScreenName != value)
				{
					this._ScreenName = value;
					this.OnPropertyChanged("ScreenName");
				}
			}
		}
	}
#endif
}
